import org.json.*;
import okhttp3.*;
import com.google.gson.Gson;
import io.api.etherscan.model.*;
import io.api.etherscan.core.*;
import io.api.etherscan.core.impl.EtherScanApi;
import io.api.etherscan.error.*;
import io.api.etherscan.executor.*;
import io.api.etherscan.manager.*;
import io.api.etherscan.model.*;
import io.api.etherscan.model.proxy.TxProxy;
import io.api.etherscan.util.*;
import java.awt.datatransfer.StringSelection;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.text.DecimalFormat;

import org.apache.http.*;
import org.apache.http.HttpEntity;
import org.apache.http.HttpHeaders;
import org.apache.http.NameValuePair;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.utils.URIBuilder;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;
import java.awt.*;

import java.io.*;
import java.math.BigInteger;
import java.net.HttpURLConnection;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;

public class NewJFrame extends javax.swing.JFrame {
    public static String username;
    public static String waddress;
    private static String apiKey = "db3b8b4b-4082-46ea-8964-59793b107306";
    private static String scanapiKey = "SE2IE1QVHZGFGACZ9M3EB118PK2HMHXB8S";
    
    static String hashid="",from="", to="",value="";
    
    static Image test;
    public NewJFrame() {
       
        initComponents();
    }
    public NewJFrame(String usr,String wa) {
        username=usr;
        waddress=wa;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard");
        setBackground(new java.awt.Color(102, 102, 102));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 58)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("WALLET BALANCE");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        jButton3.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 14)); // NOI18N
        jButton3.setText("ETH price");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 470, -1, -1));

        jButton4.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 14)); // NOI18N
        jButton4.setText("BTC PRICE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 500, -1, -1));

        jTextField2.setText("Enter txn:");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 140, 230, -1));

        jButton5.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 12)); // NOI18N
        jButton5.setText("Find");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 140, -1, -1));

        jLabel3.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Address:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));

        jLabel4.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Value: 0");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        jLabel5.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("CHANGE %");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 190, -1, -1));

        jButton6.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 12)); // NOI18N
        jButton6.setText("Copy");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, -1, 20));

        jButton7.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 12)); // NOI18N
        jButton7.setText("Check");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 100, -1, 20));
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 98, 320, -1));

        jLabel6.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ETH: 0");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/eth.png"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, -1, -1));

        jLabel7.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("REALTIME QUOTES:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, -1, -1));

        jLabel9.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("TRACK YOUR TRANSACTIONS");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 430, -1, -1));

        jButton1.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 12)); // NOI18N
        jButton1.setText("transactions tracker");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 460, -1, -1));

        jLabel10.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("FIND BLOCKCHAIN TRANSACTION:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 100, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 190, 390, 210));

        jButton2.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 12)); // NOI18N
        jButton2.setText("clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 140, -1, -1));

        jButton8.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 12)); // NOI18N
        jButton8.setText("insert into tracker");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 400, -1, -1));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 610));

        jMenuBar2.setBackground(new java.awt.Color(51, 51, 51));
        jMenuBar2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jMenu5.setText("HOME");
        jMenu5.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 12)); // NOI18N
        jMenuBar2.add(jMenu5);

        jMenu2.setText("TXN TRACKER");
        jMenu2.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 12)); // NOI18N
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu2);

        jMenu4.setText("SETTINGS");
        jMenu4.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 12)); // NOI18N
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu4ActionPerformed(evt);
            }
        });
        jMenuBar2.add(jMenu4);

        jMenu1.setText("ABOUT");
        jMenu1.setFont(new java.awt.Font("Upheaval TT (BRK)", 0, 12)); // NOI18N
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu1);

        setJMenuBar(jMenuBar2);

        setSize(new java.awt.Dimension(1287, 666));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String pro="https://pro-api.coinmarketcap.com/v2/cryptocurrency/quotes/latest";
        List<NameValuePair> paratmers = new ArrayList<NameValuePair>();
        paratmers.add(new BasicNameValuePair("id", "1"));

        try {
            String result = makeAPICall(pro, paratmers);
            
            JSONObject obj = new JSONObject(result);
            String cena=obj.getJSONObject("data").getJSONObject("1").getJSONObject("quote").getJSONObject("USD").get("price").toString();
            //data->[index]->quote->[price type like "USD"]->price
            JOptionPane.showMessageDialog(rootPane, cena.substring(0,8)+" USD");
            
        } catch (IOException e) {
            System.out.println("Error: cannont access content - " + e.toString());
        } catch (URISyntaxException e) {
            System.out.println("Error: Invalid URL " + e.toString());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        jTextField3.setText(waddress);
        jLabel1.setText(username+"'s wallet balance");
        try{
        Image i = ImageIO.read(getClass().getResource("/resources/icon.png"));
        setIconImage(i);
        }catch(IOException EX){
        
        }      
    }//GEN-LAST:event_formComponentShown

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        waddress=jTextField3.getText();
        EtherScanApi api = new EtherScanApi();
        BigInteger balance = api.account().balance(waddress).getWei();
        double b=balance.doubleValue()/1000000000;
        double c=b/1000000000;
        DecimalFormat df = new DecimalFormat("###,###.00"); 
        
        String x=df.format(c)+"";
        String z=x; //
        jLabel6.setText("ETH: "+z);
        
        //cena eth  * amount   api klic  coinmarketcapi.com
        String pro="https://pro-api.coinmarketcap.com/v2/cryptocurrency/quotes/latest";
        List<NameValuePair> paratmers = new ArrayList<NameValuePair>();
        paratmers.add(new BasicNameValuePair("id", "1027"));
        //paratmers.add(new BasicNameValuePair("name", "Ethereum"));
        //paratmers.add(new BasicNameValuePair("symbol", "ETH"));

        try {
            String result = makeAPICall(pro, paratmers);
    
            JSONObject obj = new JSONObject(result);
            String cena=obj.getJSONObject("data").getJSONObject("1027").getJSONObject("quote").getJSONObject("USD").get("price").toString(); //1027 id od eth!!!!!!
            String change24h=obj.getJSONObject("data").getJSONObject("1027").getJSONObject("quote").getJSONObject("USD").get("percent_change_24h").toString();
            //data->[index]->quote->[price type like "USD"]->price
            double w=c*Double.parseDouble(cena);
            String y=df.format(w)+"";
            jLabel4.setText("Value: "+y+"  USD");
            if(Double.parseDouble(change24h)>0.0){
            //zelena +
            jLabel5.setText(change24h.substring(0,4)+"% CHANGE 24h");
                        jLabel5.setForeground(Color.green);
            }else{
            //rdeca -
            jLabel5.setText(change24h.substring(0,4)+"% CHANGE 24h");
            jLabel5.setForeground(Color.red);
            }

        } catch (IOException e) {
            System.out.println("Error: cannont access content - " + e.toString());
        } catch (URISyntaxException e) {
            System.out.println("Error: Invalid URL " + e.toString());
        }
       
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // clipboard kopiranje 
        String myString = jTextField3.getText();
        StringSelection stringSelection = new StringSelection(myString);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, null);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        new settings(username).setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenu4MouseClicked

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        new about(username).setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        new txntracker(username).setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String pro = "https://pro-api.coinmarketcap.com/v2/cryptocurrency/quotes/latest";
        List<NameValuePair> paratmers = new ArrayList<NameValuePair>();
        paratmers.add(new BasicNameValuePair("id", "1027"));

        try {
            String result = makeAPICall(pro, paratmers);

            JSONObject obj = new JSONObject(result);
            String cena = obj.getJSONObject("data").getJSONObject("1027").getJSONObject("quote").getJSONObject("USD").get("price").toString();
            //data->[index]->quote->[price type like "USD"]->price
            JOptionPane.showMessageDialog(rootPane, cena.substring(0,7)+" USD");

        } catch (IOException e) {
            System.out.println("Error: cannont access content - " + e.toString());
        } catch (URISyntaxException e) {
            System.out.println("Error: Invalid URL " + e.toString());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new txntracker(username).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    

    public static long parseUnsignedHex(String text) {
        if (text.length() == 16) {
            return (parseUnsignedHex(text.substring(0, 1)) << 60)
                    | parseUnsignedHex(text.substring(1));
        }
        return Long.parseLong(text, 16);
    }
       
        
        
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jTextArea1.setText("");
        String txnapi=jTextField2.getText();
        //12 11 convert
        try{
        EtherScanApi api = new EtherScanApi(EthNetwork.MAINNET);
        Optional<TxProxy> tx = api.proxy().tx(txnapi);
        
        String[] tab=tx.toString().split(",");
        for(int i=0;i<tab.length;i++){
            if (i==0) {
                jTextArea1.append("To: "+tab[i].substring(21,tab[i].length()-1));
                to=tab[i].substring(21,tab[i].length()-1);
                jTextArea1.append("\n");
            }else if(i==1){
                jTextArea1.append(tab[i].trim());
                hashid=tab[i].trim();
                jTextArea1.append("\n");
            }else if(i==4){
                jTextArea1.append(tab[i].trim());
                from=tab[i].trim();
                jTextArea1.append("\n");
            }else if(i==9){
                jTextArea1.append(tab[i].trim());
                jTextArea1.append("\n");
            }else if (i == 11) {
                tab[i] = tab[i].trim().substring(9, tab[i].length() - 2);
                String hex = tab[i];
                
                //long longHex = parseUnsignedHex(hex);
               // double d = Double.longBitsToDouble(longHex);
                
                jTextArea1.append("Value: " + hex);
                value=hex;
                jTextArea1.append("\n");
            }else if(i==12){
                jTextArea1.append(tab[i].trim());
                jTextArea1.append("\n");
            }else if(i==17){
                jTextArea1.append(tab[i].trim());
                jTextArea1.append("\n");
            }

            
        }
        }catch(IndexOutOfBoundsException EX){
            //JOptionPane.showMessageDialog(rootPane, "Is your txn ETH based?");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    
    
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       jTextField2.setText("");
       jTextArea1.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed



        try{
            PrintWriter pw = new PrintWriter(new FileWriter(new File("tracker.txt"), true));
            pw.println("User: "+username);
            pw.println(hashid.substring(6,hashid.length()-1));
            pw.println(from.substring(6,from.length()-1));
            pw.println(to);
            pw.println(0);//value
            pw.println("received");
            

            
            
            pw.close();
        }catch(IOException ex){
        
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //https://pro-api.coinmarketcap.com/v2/cryptocurrency/quotes/latest
        /*
        String uri = "https://sandbox-api.coinmarketcap.com/v1/cryptocurrency/listings/latest";
        List<NameValuePair> paratmers = new ArrayList<NameValuePair>();
        paratmers.add(new BasicNameValuePair("start", "1"));
        paratmers.add(new BasicNameValuePair("limit", "5000"));
        paratmers.add(new BasicNameValuePair("convert", "USD"));*/
        

        
        
        
        
        String pro="https://pro-api.coinmarketcap.com/v2/cryptocurrency/quotes/latest";
        List<NameValuePair> paratmers = new ArrayList<NameValuePair>();
        paratmers.add(new BasicNameValuePair("id", "1"));
        paratmers.add(new BasicNameValuePair("name", "Bitcoin"));
        paratmers.add(new BasicNameValuePair("symbol", "BTC"));
        try {
            String result = makeAPICall(pro, paratmers);
            System.out.println(result);
            
        } catch (IOException e) {
            System.out.println("Error: cannont access content - " + e.toString());
        } catch (URISyntaxException e) {
            System.out.println("Error: Invalid URL " + e.toString());
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
                jTextField3.setText(waddress);
                        
            }
        });
    }
    
    public static String makeAPICall(String uri, List<NameValuePair> parameters)
        throws URISyntaxException, IOException {
        String response_content = "";
        
        URIBuilder query = new URIBuilder(uri);
        query.addParameters(parameters);
        
        CloseableHttpClient client = HttpClients.createDefault();
        HttpGet request = new HttpGet(query.build());
        
        request.setHeader(HttpHeaders.ACCEPT, "application/json");
        request.addHeader("X-CMC_PRO_API_KEY", apiKey);
        
        CloseableHttpResponse response = client.execute(request);
        
        try {
            System.out.println(response.getStatusLine());
            HttpEntity entity = response.getEntity();
            response_content = EntityUtils.toString(entity);
            EntityUtils.consume(entity);
        } finally {
            response.close();
        }
        
        return response_content;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    public static javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField2;
    private static javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
